(lambda (exchange)	(let* (		(this-session (get-current-session exchange))		(language (@key this-session 'language))		(interface (@key this-session 'interface))		(xml-url			(url				(+					"file://"					(@key (get-exchange-headers exchange) path-translated))))		(about			(detect				(url-get-content xml-url)				(lambda (el)					(string=? (get-xml-tag-name el) "about" #f))))		(front			(detect				about				(lambda (el)					(string=? (get-xml-tag-name el) "front" #f))))		(body			(detect				about				(lambda (el)					(string=? (get-xml-tag-name el) "body" #f))))		(title			(detect				front				(lambda (el)					(string=? (get-xml-tag-name el) "title" #f))))		(compatible-language?			(lambda (xml-element)				(let (					(language-attribute (@get xml-element 'LANGUAGE)))					(or						(null? language-attribute)						(string=? language-attribute language #f)))))		)		(if (invalid? language)			(set! language "English"))		(if (invalid? interface)			(set! interface "Graphics"))		(set! (@key this-session 'language) language)		(set! (@key this-session 'interface) interface)		(set!			(@key this-session 'last-page-url)			(url (get-exchange-url exchange)))		<HTML>			<HEAD><TITLE><SERVER>title</SERVER></TITLE></HEAD>			<BODY BGCOLOR=#FFFFFF>				<SERVER>					(collect						body						(lambda (el)							(if (false? (compatible-language? el)) ;;; incompatible? answer nothing								nil								(let (									(tag-name (get-xml-tag-name el)))									(cond										((string=? tag-name "p" #f)											<HTML><P><SERVER>el</SERVER></p></HTML>)										((string=? tag-name "BR" #f)											<HTML><BR <SERVER>												(let (													(clear (@get el 'CLEAR)))													(if (false? (null? clear))														<<HTML>CLEAR="<SERVER>clear</SERVER>"</HTML>														nil))											</SERVER>>											</HTML>)										((string=? tag-name "IMG" #f)											(if (string=? interface "graphics" #f)												<HTML><IMG <SERVER>														(collect															(get-xml-attribute el)															(lambda (attr)																<HTML><SERVER>attr</SERVER>="<SERVER>(get-xml-attribute el attr)</SERVER>"</HTML>))												</SERVER>></HTML>												<HTML><FONT SIZE=4>													<SERVER>(@get el 'ALT)</SERVER>												</HTML>)))))))				</SERVER>				<BR CLEAR=RIGHT>				<center>					| <A HREF="http://www.globalstrat.com/index.html">Home</A> | <A HREF="http://www.globalstrat.com/info/welcome.html">Welcome</A> | <A HREF="http://www.globalstrat.com/news/fund.news.html">News & Insights</A> | 					<A HREF="http://www.globalstrat.com/info/distributors.html">Advisers</A> |					<A HREF="http://www.globalstrat.com/funds/fundprices-NAVajo.html">Daily Prices</A> |					<br>					|  					<A HREF="http://www.globalstrat.com/funds/gs.funds.html">Fund Overviews</A> |					<A HREF="http://www.globalstrat.com/info/ltd_partnerships.html">Limited Partnerships</A> |  <A HREF="http://www.globalstrat.com/http://www.incommunik.com">Communique</A> |					<!-- <hr size=1 noshade width=550 align=left></h5> -->				</center>				<HR>				<A HREF="<SERVER>					(exchange-encode-url						exchange						(url							(get-exchange-url exchange)							"preferences"))				</SERVER>">Preferences</A>			</BODY>		</HTML>))